/**
 * ÏµúÏ¢Ö ÌÜµÌï© ÏàòÏ†ï Ïä§ÌÅ¨Î¶ΩÌä∏
 * - Î™®Îì† ÌÉÄÏù¥Î∞ç Î¨∏Ï†ú Ìï¥Í≤∞
 * - emergency-font-modal-fix.js ÎπÑÌôúÏÑ±Ìôî
 * - ÎØ∏Î¶¨Î≥¥Í∏∞ Î™®Îìú ÏôÑÏ†Ñ ÌÜµÌï©
 */

(function() {
    'use strict';
    
    console.log('üöÄ ÏµúÏ¢Ö ÌÜµÌï© ÏàòÏ†ï ÏãúÏûë (ULTIMATE FIX)');
    
    // ========== 1. Emergency Font Modal Fix ÎπÑÌôúÏÑ±Ìôî ==========
    function disableEmergencyFix() {
        console.log('üö´ Emergency Font Modal Fix ÎπÑÌôúÏÑ±Ìôî');
        
        // setupEmergencyFontHandler Ìï®Ïàò Î¨¥Î†•Ìôî
        if (window.setupEmergencyFontHandler) {
            window.setupEmergencyFontHandler = function() {
                console.log('setupEmergencyFontHandler ÎπÑÌôúÏÑ±ÌôîÎê®');
            };
        }
        
        // Ï†ÑÏó≠ Î≥ÄÏàò ÏÑ§Ï†ïÏúºÎ°ú Ïã§Ìñâ Î∞©ÏßÄ
        window._emergencyHandlerSetup = true;
        
        // DOM Î°úÎìú Ïù¥Î≤§Ìä∏ Ï†úÍ±∞
        const listeners = getEventListeners ? getEventListeners(document) : null;
        if (listeners && listeners.DOMContentLoaded) {
            listeners.DOMContentLoaded.forEach(listener => {
                if (listener.listener.toString().includes('setupEmergencyFontHandler')) {
                    document.removeEventListener('DOMContentLoaded', listener.listener);
                }
            });
        }
    }
    
    // ========== 2. ÎØ∏Î¶¨Î≥¥Í∏∞ Î™®Îìú ÏôÑÏ†Ñ ÌÜµÌï© ==========
    function completePreviewIntegration() {
        console.log('üîç ÎØ∏Î¶¨Î≥¥Í∏∞ Î™®Îìú ÏôÑÏ†Ñ ÌÜµÌï©');
        
        // Î™®Îì† ÎØ∏Î¶¨Î≥¥Í∏∞ ÎπÑÌôúÏÑ±Ìôî
        if (window.PreviewControl?.disable) {
            window.PreviewControl.disable();
        }
        if (window.toggleSafePreview) {
            window.toggleSafePreview(false);
        }
        document.body.classList.remove('preview-mode', 'safe-preview-mode');
        document.body.style.transform = 'none';
        
        // Îã®Ïùº ÎØ∏Î¶¨Î≥¥Í∏∞ ÏãúÏä§ÌÖúÏúºÎ°ú ÌÜµÌï©
        window.UnifiedPreviewSystem = {
            isActive: false,
            scale: 0.8,
            
            enable() {
                if (this.isActive) return;
                console.log('üîç ÌÜµÌï© ÎØ∏Î¶¨Î≥¥Í∏∞ ÌôúÏÑ±Ìôî');
                
                this.isActive = true;
                document.body.classList.add('unified-preview-mode');
                
                const container = document.querySelector('.container');
                if (container) {
                    container.style.transform = `scale(${this.scale})`;
                    container.style.transformOrigin = 'top center';
                }
                
                // Î™®Îã¨ Î≥¥Ìò∏
                document.querySelectorAll('.modal, .modal-content').forEach(modal => {
                    modal.style.zIndex = '10000';
                    modal.style.pointerEvents = 'auto';
                });
            },
            
            disable() {
                if (!this.isActive) return;
                console.log('‚ùå ÌÜµÌï© ÎØ∏Î¶¨Î≥¥Í∏∞ ÎπÑÌôúÏÑ±Ìôî');
                
                this.isActive = false;
                document.body.classList.remove('unified-preview-mode');
                
                const container = document.querySelector('.container');
                if (container) {
                    container.style.transform = 'none';
                }
            },
            
            toggle() {
                this.isActive ? this.disable() : this.enable();
            }
        };
        
        // Í∏∞Ï°¥ ÏãúÏä§ÌÖú Î¶¨Îã§Ïù¥Î†âÌä∏
        if (window.PreviewControl) {
            window.PreviewControl.enable = () => window.UnifiedPreviewSystem.enable();
            window.PreviewControl.disable = () => window.UnifiedPreviewSystem.disable();
            window.PreviewControl.isEnabled = () => window.UnifiedPreviewSystem.isActive;
        }
        
        if (window.toggleSafePreview) {
            window.toggleSafePreview = (enable) => {
                enable ? window.UnifiedPreviewSystem.enable() : window.UnifiedPreviewSystem.disable();
            };
        }
    }
    
    // ========== 3. Î≤ÑÌäº Ìï∏Îì§Îü¨ ÌÜµÌï© ==========
    function unifyButtonHandlers() {
        console.log('üî® Î≤ÑÌäº Ìï∏Îì§Îü¨ ÌÜµÌï©');
        
        // Î™®Îì† Ï§ëÎ≥µ Î≤ÑÌäº Ï†úÍ±∞
        const fontBtns = document.querySelectorAll('#fontSizeDetailBtn');
        console.log(`Í∏ÄÏûê ÌÅ¨Í∏∞ Î≤ÑÌäº ${fontBtns.length}Í∞ú Î∞úÍ≤¨`);
        
        if (fontBtns.length > 1) {
            for (let i = 1; i < fontBtns.length; i++) {
                fontBtns[i].remove();
            }
        }
        
        // Î©îÏù∏ Î≤ÑÌäºÏóê Îã®Ïùº Ìï∏Îì§Îü¨ ÏÑ§Ï†ï
        const mainBtn = document.getElementById('fontSizeDetailBtn');
        if (mainBtn) {
            // Î™®Îì† Í∏∞Ï°¥ Ïù¥Î≤§Ìä∏ Ï†úÍ±∞
            const newBtn = mainBtn.cloneNode(true);
            newBtn.dataset.unifiedHandler = 'true';
            
            // ÌÜµÌï© Ìï∏Îì§Îü¨
            newBtn.onclick = function(e) {
                e.preventDefault();
                e.stopPropagation();
                
                console.log('‚úÖ ÌÜµÌï© Í∏ÄÏûê ÌÅ¨Í∏∞ Î≤ÑÌäº ÌÅ¥Î¶≠');
                
                // Í∏∞Ï°¥ Î™®Îã¨ Ï†úÍ±∞
                document.querySelectorAll('#fontSizeModal').forEach(m => m.remove());
                
                // Î™®Îã¨ Ïó¥Í∏∞
                try {
                    if (window.AdvancedControls?.openFontSizeModal) {
                        window.AdvancedControls.openFontSizeModal();
                        
                        // ÎØ∏Î¶¨Î≥¥Í∏∞ ÌôúÏÑ±Ìôî
                        setTimeout(() => {
                            window.UnifiedPreviewSystem.enable();
                        }, 100);
                    } else {
                        throw new Error('AdvancedControls ÏóÜÏùå');
                    }
                } catch (err) {
                    console.error('Î™®Îã¨ Ïò§Î•ò:', err);
                    if (window.openEmergencyFontModal) {
                        window.openEmergencyFontModal('fallback');
                    }
                }
            };
            
            if (mainBtn.parentNode) {
                mainBtn.parentNode.replaceChild(newBtn, mainBtn);
                console.log('‚úÖ Î≤ÑÌäº Ìï∏Îì§Îü¨ ÌÜµÌï© ÏôÑÎ£å');
            }
        }
    }
    
    // ========== 4. Î™®Îã¨ Í∞êÏßÄ ÏµúÏ†ÅÌôî ==========
    function optimizeModalDetection() {
        console.log('‚ö° Î™®Îã¨ Í∞êÏßÄ ÏµúÏ†ÅÌôî');
        
        // Í∏∞Ï°¥ MutationObserver Ï†úÍ±∞
        if (window._modalObserver) {
            window._modalObserver.disconnect();
        }
        
        // ÏÉàÎ°úÏö¥ ÏµúÏ†ÅÌôîÎêú Observer
        window._modalObserver = new MutationObserver(function(mutations) {
            mutations.forEach(function(mutation) {
                mutation.addedNodes.forEach(function(node) {
                    if (node.nodeType === 1 && node.classList?.contains('modal')) {
                        // Ï§ëÎ≥µ Î™®Îã¨ Ï≤¥ÌÅ¨
                        if (node.id) {
                            const existing = document.querySelectorAll(`#${node.id}`);
                            if (existing.length > 1) {
                                console.log(`Ï§ëÎ≥µ Î™®Îã¨ ${node.id} Ï†úÍ±∞`);
                                node.remove();
                                return;
                            }
                        }
                        
                        // Í∏ÄÏûê/ÏÉâÏÉÅ Î™®Îã¨Ïù¥Î©¥ ÎØ∏Î¶¨Î≥¥Í∏∞ ÌôúÏÑ±Ìôî
                        if (node.id === 'fontSizeModal' || node.id === 'colorModeModal') {
                            setTimeout(() => {
                                window.UnifiedPreviewSystem.enable();
                            }, 100);
                        }
                    }
                });
            });
        });
        
        window._modalObserver.observe(document.body, {
            childList: true,
            subtree: false
        });
    }
    
    // ========== 5. Ï£ºÍ∏∞Ï†Å Ï†ïÎ¶¨ Í∞úÏÑ† ==========
    function improvePeriodicCleanup() {
        console.log('üîÑ Ï£ºÍ∏∞Ï†Å Ï†ïÎ¶¨ Í∞úÏÑ†');
        
        // Í∏∞Ï°¥ interval Î™®Îëê Ï†úÍ±∞
        for (let i = 1; i < 99999; i++) {
            if (window['_interval_' + i]) {
                clearInterval(window['_interval_' + i]);
            }
        }
        
        // Îã®Ïùº Ï†ïÎ¶¨ interval (15Ï¥à)
        window._mainCleanupInterval = setInterval(() => {
            // Ï§ëÎ≥µ Î™®Îã¨ Ï≤¥ÌÅ¨
            ['fontSizeModal', 'colorModeModal', 'themeModal'].forEach(id => {
                const modals = document.querySelectorAll(`#${id}`);
                if (modals.length > 1) {
                    for (let i = 1; i < modals.length; i++) {
                        modals[i].remove();
                    }
                }
            });
            
            // Ï§ëÎ≥µ Î≤ÑÌäº Ï≤¥ÌÅ¨
            const btns = document.querySelectorAll('#fontSizeDetailBtn');
            if (btns.length > 1) {
                for (let i = 1; i < btns.length; i++) {
                    btns[i].remove();
                }
            }
        }, 15000);
    }
    
    // ========== 6. ÏΩòÏÜî ÏµúÏ†ÅÌôî ==========
    function optimizeConsole() {
        console.log('üìù ÏΩòÏÜî ÏµúÏ†ÅÌôî');
        
        const originalLog = console.log;
        const messageCount = {};
        const maxCount = 3;
        
        console.log = function(...args) {
            const message = args.join(' ');
            
            // ÌïÑÌÑ∞Ìï† Ìå®ÌÑ¥
            const filterPatterns = [
                'ÌÅ¥Î¶≠ Ï¢åÌëú Î≥¥Ï†ï',
                'ÎØ∏Î¶¨Î≥¥Í∏∞ Ïª®Ìä∏Î°§ ÏÑ§Ï†ï ÏôÑÎ£å',
                'parentNode ÏóÜÏùå',
                'Ï§ëÎ≥µ ÏöîÏÜå Í∞ïÏ†ú Ï†úÍ±∞'
            ];
            
            for (const pattern of filterPatterns) {
                if (message.includes(pattern)) {
                    messageCount[pattern] = (messageCount[pattern] || 0) + 1;
                    if (messageCount[pattern] > maxCount) {
                        return; // 3Ìöå Ï¥àÍ≥º Î©îÏãúÏßÄ Î¨¥Ïãú
                    }
                }
            }
            
            originalLog.apply(console, args);
        };
    }
    
    // ========== 7. ÏÉÅÌÉú Î™®ÎãàÌÑ∞ÎßÅ ==========
    function monitorStatus() {
        console.log('\n=== üìä ÏãúÏä§ÌÖú ÏÉÅÌÉú ===');
        
        const status = {
            'Í∏ÄÏûê ÌÅ¨Í∏∞ Î≤ÑÌäº': document.querySelectorAll('#fontSizeDetailBtn').length,
            'ÏÉâÏÉÅ Î™®Îìú Î≤ÑÌäº': document.querySelectorAll('#colorModeDetailBtn').length,
            'fontSizeModal': document.querySelectorAll('#fontSizeModal').length,
            'ÎØ∏Î¶¨Î≥¥Í∏∞ ÏÉÅÌÉú': window.UnifiedPreviewSystem?.isActive || false,
            'ÌôúÏÑ± Î™®Îã¨': document.querySelectorAll('.modal:not([style*="display: none"])').length
        };
        
        console.table(status);
        
        // Î¨∏Ï†ú Ï≤¥ÌÅ¨
        const issues = [];
        if (status['Í∏ÄÏûê ÌÅ¨Í∏∞ Î≤ÑÌäº'] !== 1) {
            issues.push(`Î≤ÑÌäº Í∞úÏàò Ïù¥ÏÉÅ: ${status['Í∏ÄÏûê ÌÅ¨Í∏∞ Î≤ÑÌäº']}`);
        }
        if (status['fontSizeModal'] > 1) {
            issues.push(`Î™®Îã¨ Ï§ëÎ≥µ: ${status['fontSizeModal']}`);
        }
        
        if (issues.length > 0) {
            console.warn('‚ö†Ô∏è Î∞úÍ≤¨Îêú Î¨∏Ï†ú:', issues);
            console.log('ÏûêÎèô ÏàòÏ†ï ÏãúÎèÑ...');
            unifyButtonHandlers();
        } else {
            console.log('‚úÖ ÏãúÏä§ÌÖú Ï†ïÏÉÅ');
        }
        
        console.log('===================\n');
    }
    
    // ========== Ï¥àÍ∏∞Ìôî ==========
    function init() {
        console.log('üéØ ÏµúÏ¢Ö ÌÜµÌï© Ï¥àÍ∏∞Ìôî');
        
        // 1. Emergency Fix ÎπÑÌôúÏÑ±Ìôî
        disableEmergencyFix();
        
        // 2. ÎØ∏Î¶¨Î≥¥Í∏∞ ÌÜµÌï©
        completePreviewIntegration();
        
        // 3. Î≤ÑÌäº Ìï∏Îì§Îü¨ ÌÜµÌï©
        setTimeout(unifyButtonHandlers, 500);
        
        // 4. Î™®Îã¨ Í∞êÏßÄ ÏµúÏ†ÅÌôî
        optimizeModalDetection();
        
        // 5. Ï£ºÍ∏∞Ï†Å Ï†ïÎ¶¨ Í∞úÏÑ†
        improvePeriodicCleanup();
        
        // 6. ÏΩòÏÜî ÏµúÏ†ÅÌôî
        optimizeConsole();
        
        // 7. 3Ï¥à ÌõÑ ÏÉÅÌÉú ÌôïÏù∏
        setTimeout(monitorStatus, 3000);
        
        console.log('‚úÖ ÏµúÏ¢Ö ÌÜµÌï© ÏôÑÎ£å');
    }
    
    // Ï¶âÏãú Ïã§Ìñâ (Îã§Î•∏ Ïä§ÌÅ¨Î¶ΩÌä∏Î≥¥Îã§ Î®ºÏ†Ä)
    disableEmergencyFix(); // Ï¶âÏãú ÎπÑÌôúÏÑ±Ìôî
    
    // DOM Î°úÎìú ÌõÑ Ï¥àÍ∏∞Ìôî
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', init);
    } else {
        setTimeout(init, 100);
    }
    
    // Ï†ÑÏó≠ Ïú†Ìã∏Î¶¨Ìã∞
    window.ultimateFix = {
        status: monitorStatus,
        fixButtons: unifyButtonHandlers,
        preview: window.UnifiedPreviewSystem,
        reset: init
    };
    
    console.log('‚úÖ Ultimate Fix Î°úÎìú ÏôÑÎ£å');
    console.log('üí° ÏÉÅÌÉú: ultimateFix.status()');
    console.log('üí° Î¶¨ÏÖã: ultimateFix.reset()');
    
})();