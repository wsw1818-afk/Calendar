// Î©îÎâ¥ ÌÅ¥Î¶≠ Î≥¥Ïû• ÏãúÏä§ÌÖú - Menu Click Guarantee System
(function() {
    'use strict';
    
    // Î©îÎâ¥ ÌÅ¥Î¶≠ Ï≤òÎ¶¨ ÌÜµÌï© ÏãúÏä§ÌÖú
    const menuClickSystem = {
        // Î≤ÑÌäºÎ≥Ñ Ï≤òÎ¶¨ Ìï®Ïàò
        handlers: {
            createBtn: function() {
                console.log('üÜï ÏÉùÏÑ± Î©îÎâ¥ ÌÅ¥Î¶≠');
                if (typeof window.modalManager !== 'undefined') {
                    window.modalManager.open('createModal');
                } else {
                    const modal = document.getElementById('createModal');
                    if (modal) {
                        this.forceShowModal(modal);
                    }
                }
            },
            
            memoBtn: function() {
                console.log('üìù Ïä§Ìã∞Ïª§ Î©îÎ™® ÌÅ¥Î¶≠');
                if (typeof window.openStickyMemo === 'function') {
                    window.openStickyMemo();
                } else {
                    alert('Ïä§Ìã∞Ïª§ Î©îÎ™® Í∏∞Îä•ÏùÑ Ï§ÄÎπÑ Ï§ëÏûÖÎãàÎã§.');
                }
            },
            
            excelBtn: function() {
                console.log('üìä ÏóëÏÖÄ ÎÇ¥Î≥¥ÎÇ¥Í∏∞ ÌÅ¥Î¶≠');
                
                // Îã§Ï§ë Î∞©Î≤ïÏúºÎ°ú ÏóëÏÖÄ Î™®Îã¨ Ïó¥Í∏∞ ÏãúÎèÑ
                const methods = [
                    // Î∞©Î≤ï 1: Î™®Îã¨ Îß§ÎãàÏ†Ä ÏÇ¨Ïö©
                    () => {
                        if (typeof window.modalManager !== 'undefined') {
                            window.modalManager.open('excelModal');
                            return true;
                        }
                        return false;
                    },
                    
                    // Î∞©Î≤ï 2: ÏßÅÏ†ë Î™®Îã¨ ÌëúÏãú
                    () => {
                        const modal = document.getElementById('excelModal');
                        if (modal) {
                            this.forceShowModal(modal);
                            return true;
                        }
                        return false;
                    },
                    
                    // Î∞©Î≤ï 3: Î™®Îì† Î™®Îã¨ Îã´Í≥† Í∞ïÏ†ú Ïó¥Í∏∞
                    () => {
                        // Î®ºÏ†Ä Î™®Îì† Î™®Îã¨ Îã´Í∏∞
                        document.querySelectorAll('.modal').forEach(m => {
                            m.style.display = 'none';
                            m.classList.remove('show');
                        });
                        
                        const modal = document.getElementById('excelModal');
                        if (modal) {
                            this.forceShowModal(modal);
                            return true;
                        }
                        return false;
                    }
                ];
                
                // ÏàúÏ∞®Ï†ÅÏúºÎ°ú ÏãúÎèÑ
                for (let i = 0; i < methods.length; i++) {
                    console.log(`üìä ÏóëÏÖÄ Î™®Îã¨ Î∞©Î≤ï ${i + 1} ÏãúÎèÑ`);
                    if (methods[i].call(this)) {
                        console.log(`‚úÖ ÏóëÏÖÄ Î™®Îã¨ Î∞©Î≤ï ${i + 1} ÏÑ±Í≥µ`);
                        return;
                    }
                }
                
                console.error('‚ùå Î™®Îì† ÏóëÏÖÄ Î™®Îã¨ Î∞©Î≤ï Ïã§Ìå®');
                alert('ÏóëÏÖÄ ÎÇ¥Î≥¥ÎÇ¥Í∏∞Î•º Ï§ÄÎπÑÌïòÎäî Ï§ëÏûÖÎãàÎã§. Ïû†Ïãú ÌõÑ Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî.');
            },
            
            backupBtn: function(event) {
                console.log('üì¶ Î∞±ÏóÖ Î©îÎâ¥ ÌÅ¥Î¶≠');
                
                // Ïù¥Î≤§Ìä∏ Ï†ÑÌåå Î∞©ÏßÄ
                if (event) {
                    event.preventDefault();
                    event.stopPropagation();
                    event.stopImmediatePropagation();
                }
                
                // modal-system-fix.jsÏôÄÏùò Ï∂©Îèå Î∞©ÏßÄÎ•º ÏúÑÌïú ÌÜµÌï© Ï≤òÎ¶¨
                const handleBackupModal = () => {
                    // Î∞©Î≤ï 1: modalManager ÏãúÏä§ÌÖú ÏÇ¨Ïö©
                    if (typeof window.modalManager === 'object' && window.modalManager.open) {
                        console.log('üì¶ modalManager ÏãúÏä§ÌÖú ÏÇ¨Ïö©');
                        
                        // Î∞±ÏóÖ Î™®Îã¨Ïù¥ ÏóÜÏúºÎ©¥ ÏÉùÏÑ±
                        let backupModal = document.getElementById('backupModal');
                        if (!backupModal) {
                            console.log('üì¶ Î∞±ÏóÖ Î™®Îã¨ ÏÉùÏÑ± Ï§ë...');
                            this.createBackupModal();
                            backupModal = document.getElementById('backupModal');
                        }
                        
                        if (backupModal) {
                            // ÏïΩÍ∞ÑÏùò ÏßÄÏó∞ÏùÑ Ï£ºÏñ¥ DOM ÏïàÏ†ïÌôî
                            setTimeout(() => {
                                window.modalManager.open('backupModal');
                            }, 10);
                            return true;
                        }
                    }
                    
                    // Î∞©Î≤ï 2: Í∏∞Ï°¥ Î∞±ÏóÖ ÏãúÏä§ÌÖú ÏÇ¨Ïö© (Î™®Îã¨ Ï†úÍ±∞ ÏóÜÏù¥)
                    if (typeof window.portableBackupSystem !== 'undefined' && 
                        typeof window.portableBackupSystem.openBackupModal === 'function') {
                        console.log('üì¶ Í∏∞Ï°¥ Î∞±ÏóÖ ÏãúÏä§ÌÖú ÏÇ¨Ïö©');
                        // Î™®Îã¨ Ï†úÍ±∞ ÏóÜÏù¥ Î∞îÎ°ú Ïã§Ìñâ
                        window.portableBackupSystem.openBackupModal();
                        return true;
                    }
                    
                    // Î∞©Î≤ï 3: ÏßÅÏ†ë Î∞±ÏóÖ Îã§Ïö¥Î°úÎìú Ïã§Ìñâ
                    if (typeof window.portableBackupSystem !== 'undefined' && 
                        typeof window.portableBackupSystem.downloadBackup === 'function') {
                        console.log('üì¶ ÏßÅÏ†ë Î∞±ÏóÖ Îã§Ïö¥Î°úÎìú Ïã§Ìñâ');
                        window.portableBackupSystem.downloadBackup();
                        return true;
                    }
                    
                    // Î∞©Î≤ï 4: Î∞±ÏóÖ Î™®Îã¨ ÎèôÏ†Å ÏÉùÏÑ±
                    console.log('üì¶ Î∞±ÏóÖ Î™®Îã¨ ÎèôÏ†Å ÏÉùÏÑ±');
                    this.createBackupModal();
                    return true;
                };
                
                try {
                    const success = handleBackupModal();
                    if (success) {
                        console.log('‚úÖ Î∞±ÏóÖ Î™®Îã¨ Ï≤òÎ¶¨ ÏÑ±Í≥µ');
                    } else {
                        console.error('‚ùå Î∞±ÏóÖ Î™®Îã¨ Ï≤òÎ¶¨ Ïã§Ìå®');
                        alert('Î∞±ÏóÖ Í∏∞Îä•ÏùÑ Î∂àÎü¨Ïò§Îäî Ï§ëÏûÖÎãàÎã§. Ïû†Ïãú ÌõÑ Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî.');
                    }
                } catch (error) {
                    console.error('Î∞±ÏóÖ Î™®Îã¨ Ï≤òÎ¶¨ Ïò§Î•ò:', error);
                    alert('Î∞±ÏóÖ Í∏∞Îä• Ïã§Ìñâ Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.');
                }
            },
            
            unifiedCloudBtn: function() {
                console.log('‚òÅÔ∏è ÌÅ¥ÎùºÏö∞Îìú ÏÑ§Ï†ï ÌÅ¥Î¶≠ - Í∞ïÎ†• Ï≤òÎ¶¨ ÏãúÏûë');
                
                // Ïó¨Îü¨ Î∞©Î≤ïÏúºÎ°ú ÌÅ¥ÎùºÏö∞Îìú Î™®Îã¨ ÏãúÎèÑ
                const methods = [
                    // Î∞©Î≤ï 1: Í∏∞Ï°¥ Ìï®Ïàò ÏÇ¨Ïö©
                    () => {
                        if (typeof window.showUnifiedCloudModal === 'function') {
                            window.showUnifiedCloudModal();
                            // Î™®Îã¨Ïù¥ ÏÉùÏÑ±Îêú ÌõÑ Í∞ïÏ†ú ÌëúÏãú
                            setTimeout(() => {
                                const modal = document.querySelector('.unified-modal, #unifiedCloudModal, #unified-modal');
                                if (modal) {
                                    this.forceShowModal(modal);
                                }
                            }, 100);
                            return true;
                        }
                        return false;
                    },
                    
                    // Î∞©Î≤ï 2: Î™®Îã¨ Îß§ÎãàÏ†Ä ÏÇ¨Ïö© (ÎèôÏ†Å ÏÉùÏÑ±)
                    () => {
                        try {
                            // ÌÅ¥ÎùºÏö∞Îìú Î™®Îã¨ ÎèôÏ†Å ÏÉùÏÑ±
                            const modal = this.createCloudModal();
                            if (modal) {
                                this.forceShowModal(modal);
                                return true;
                            }
                        } catch (e) {
                            console.error('Î™®Îã¨ Îß§ÎãàÏ†Ä Î∞©Î≤ï Ïã§Ìå®:', e);
                        }
                        return false;
                    },
                    
                    // Î∞©Î≤ï 3: Í∏∞Ï°¥ Î™®Îã¨ Ï∞æÏïÑÏÑú ÌëúÏãú
                    () => {
                        const modal = document.querySelector('.unified-modal, #unifiedCloudModal, #unified-modal');
                        if (modal) {
                            this.forceShowModal(modal);
                            return true;
                        }
                        return false;
                    }
                ];
                
                // ÏàúÏ∞®Ï†ÅÏúºÎ°ú ÏãúÎèÑ
                const tryMethod = async (index = 0) => {
                    if (index >= methods.length) {
                        console.error('‚ùå Î™®Îì† ÌÅ¥ÎùºÏö∞Îìú Î™®Îã¨ Î∞©Î≤ï Ïã§Ìå®');
                        alert('ÌÅ¥ÎùºÏö∞Îìú ÏÑ§Ï†ïÏùÑ Î∂àÎü¨Ïò§Îäî Ï§ëÏûÖÎãàÎã§. Ïû†Ïãú ÌõÑ Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî.');
                        return;
                    }
                    
                    console.log(`‚òÅÔ∏è ÌÅ¥ÎùºÏö∞Îìú Î™®Îã¨ Î∞©Î≤ï ${index + 1} ÏãúÎèÑ`);
                    const success = await methods[index]();
                    
                    if (!success) {
                        setTimeout(() => tryMethod(index + 1), 200);
                    } else {
                        console.log(`‚úÖ ÌÅ¥ÎùºÏö∞Îìú Î™®Îã¨ Î∞©Î≤ï ${index + 1} ÏÑ±Í≥µ`);
                    }
                };
                
                tryMethod();
            },
            
            syncStatusBtn: function() {
                console.log('üîç ÎèôÍ∏∞Ìôî ÏÉÅÌÉú ÌÅ¥Î¶≠');
                if (typeof window.showSyncStatusWindow === 'function') {
                    window.showSyncStatusWindow();
                } else {
                    alert('ÎèôÍ∏∞Ìôî ÏÉÅÌÉúÎ•º ÌôïÏù∏ÌïòÎäî Ï§ëÏûÖÎãàÎã§.');
                }
            },
            
            settingsBtn: function() {
                console.log('‚öôÔ∏è ÏÑ§Ï†ï Î©îÎâ¥ ÌÅ¥Î¶≠');
                if (typeof window.modalManager !== 'undefined') {
                    window.modalManager.open('settingsModal');
                } else {
                    const modal = document.getElementById('settingsModal');
                    if (modal) {
                        this.forceShowModal(modal);
                        // ÏÑ§Ï†ï Î°úÎìú
                        if (typeof loadCurrentSettingsToModal === 'function') {
                            loadCurrentSettingsToModal();
                        }
                    }
                }
            },
            
            storageBtn: function() {
                console.log('üóÑÔ∏è Ï†ÄÏû•ÏÜå Í¥ÄÎ¶¨ ÌÅ¥Î¶≠');
                if (typeof window.modalManager !== 'undefined') {
                    window.modalManager.open('storageModal');
                } else {
                    const modal = document.getElementById('storageModal');
                    if (modal) {
                        this.forceShowModal(modal);
                        // Ï†ÄÏû•ÏÜå Ï†ïÎ≥¥ ÏóÖÎç∞Ïù¥Ìä∏
                        this.updateStorageInfo();
                    }
                }
            },
            
            // Î™®Îã¨ Í∞ïÏ†ú ÌëúÏãú Ìï®Ïàò
            forceShowModal: function(modal) {
                if (!modal) return;
                
                console.log(`üîß Î™®Îã¨ Í∞ïÏ†ú ÌëúÏãú: ${modal.id}`);
                
                // Î™®Îì† Îã§Î•∏ Î™®Îã¨ Î®ºÏ†Ä Îã´Í∏∞
                document.querySelectorAll('.modal, .unified-modal, .backup-modal').forEach(m => {
                    if (m !== modal) {
                        m.style.display = 'none';
                        m.classList.remove('show');
                    }
                });
                
                // Îã¨Î†• ÏòÅÏó≠ Ï∞æÍ∏∞
                const calendarContainer = document.querySelector('.calendar-container, .calendar, #calendar, main') || document.body;
                const calendarRect = calendarContainer.getBoundingClientRect();
                
                // Îã¨Î†• Ï§ëÏïô ÏúÑÏπò Í≥ÑÏÇ∞
                const centerX = calendarRect.left + (calendarRect.width / 2);
                const centerY = calendarRect.top + (calendarRect.height / 2);
                
                console.log(`üìç Îã¨Î†• ÏúÑÏπò: x=${centerX}, y=${centerY}, ÏòÅÏó≠=${calendarRect.width}x${calendarRect.height}`);
                
                // Î™®Îã¨ ÏôÑÏ†Ñ Í∞ïÏ†ú ÌëúÏãú - Îã¨Î†• Ï§ëÏïôÏóê ÏúÑÏπò
                modal.style.cssText = `
                    display: flex !important;
                    opacity: 1 !important;
                    visibility: visible !important;
                    z-index: 999999 !important;
                    position: fixed !important;
                    top: 0 !important;
                    left: 0 !important;
                    width: 100% !important;
                    height: 100% !important;
                    background-color: rgba(0, 0, 0, 0.5) !important;
                    align-items: center !important;
                    justify-content: center !important;
                    pointer-events: auto !important;
                `;
                
                modal.classList.add('show');
                
                // Î™®Îã¨ ÎÇ¥Ïö©ÏùÑ Îã¨Î†• Ï§ëÏïôÏóê ÏúÑÏπò
                const modalContent = modal.querySelector('.modal-content, .modal-dialog');
                if (modalContent) {
                    // Î™®Îã¨ ÌÅ¨Í∏∞ Í≥ÑÏÇ∞ (Îã¨Î†• ÏòÅÏó≠Ïùò 80% ÌÅ¨Í∏∞Î°ú Ï†úÌïú)
                    const modalWidth = Math.min(600, calendarRect.width * 0.8);
                    const modalHeight = Math.min(500, calendarRect.height * 0.8);
                    
                    modalContent.style.cssText = `
                        background: white !important;
                        border-radius: 12px !important;
                        padding: 24px !important;
                        width: ${modalWidth}px !important;
                        max-height: ${modalHeight}px !important;
                        overflow-y: auto !important;
                        position: relative !important;
                        z-index: 1000000 !important;
                        pointer-events: auto !important;
                        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                        margin: auto !important;
                        border: 2px solid #e3e3e3 !important;
                        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif !important;
                    `;
                    
                    console.log(`üìê Î™®Îã¨ ÌÅ¨Í∏∞: ${modalWidth}x${modalHeight}px (Îã¨Î†• ÏòÅÏó≠ ÎåÄÎπÑ)`);
                    
                    // Î™®Îã¨ Ìó§Îçî Ïä§ÌÉÄÏùº
                    const modalHeader = modalContent.querySelector('.modal-header');
                    if (modalHeader) {
                        modalHeader.style.cssText = `
                            border-bottom: 1px solid #e9ecef !important;
                            padding-bottom: 16px !important;
                            margin-bottom: 20px !important;
                            display: flex !important;
                            justify-content: space-between !important;
                            align-items: center !important;
                        `;
                    }
                    
                    // Î™®Îã¨ ÌÉÄÏù¥ÌãÄ Ïä§ÌÉÄÏùº
                    const modalTitle = modalContent.querySelector('.modal-title, h2');
                    if (modalTitle) {
                        modalTitle.style.cssText = `
                            font-size: 18px !important;
                            font-weight: 600 !important;
                            color: #333 !important;
                            margin: 0 !important;
                        `;
                    }
                    
                    // Î™®Îã¨ Îã´Í∏∞ Î≤ÑÌäº Ïä§ÌÉÄÏùº
                    const closeBtn = modalContent.querySelector('.modal-close, .btn-close');
                    if (closeBtn) {
                        closeBtn.style.cssText = `
                            background: none !important;
                            border: none !important;
                            font-size: 20px !important;
                            cursor: pointer !important;
                            padding: 4px 8px !important;
                            border-radius: 4px !important;
                            transition: background-color 0.2s !important;
                        `;
                    }
                    
                    // Î™®Îã¨ Ìë∏ÌÑ∞ Ïä§ÌÉÄÏùº
                    const modalFooter = modalContent.querySelector('.modal-footer');
                    if (modalFooter) {
                        modalFooter.style.cssText = `
                            border-top: 1px solid #e9ecef !important;
                            padding-top: 16px !important;
                            margin-top: 20px !important;
                            display: flex !important;
                            justify-content: flex-end !important;
                            gap: 8px !important;
                        `;
                    }
                }
                
                // aria ÏÜçÏÑ±
                modal.setAttribute('aria-hidden', 'false');
                modal.setAttribute('aria-modal', 'true');
                
                // body Ïä§ÌÅ¨Î°§ Ïû†Í∏à
                document.body.classList.add('modal-open');
                document.body.style.overflow = 'hidden';
                
                console.log(`‚úÖ Î™®Îã¨ Í∞ïÏ†ú ÌëúÏãú ÏôÑÎ£å: ${modal.id}`);
                console.log(`üéØ Î™®Îã¨ ÌòÑÏû¨ Ïä§ÌÉÄÏùº:`, modal.style.cssText);
            },
            
            // Î∞±ÏóÖ Î™®Îã¨ ÎèôÏ†Å ÏÉùÏÑ±
            createBackupModal: function() {
                console.log('üì¶ Î∞±ÏóÖ Î™®Îã¨ ÎèôÏ†Å ÏÉùÏÑ± ÏãúÏûë');
                
                const modalHTML = `
                <div class="modal backup-modal unified-modal" id="backupModal" style="display: none;">
                    <div class="modal-content modal-dialog modal-body">
                        <div class="modal-header">
                            <h2 class="modal-title">üì¶ Îç∞Ïù¥ÌÑ∞ Î∞±ÏóÖ</h2>
                            <button class="modal-close" onclick="window.modalManager ? window.modalManager.close('backupModal') : this.closest('.modal').style.display='none'">‚úï</button>
                        </div>
                        <div class="modal-body">
                            <div class="backup-section">
                                <h3>üìã Î©îÎ™® Îç∞Ïù¥ÌÑ∞ Î∞±ÏóÖ</h3>
                                <p>ÌòÑÏû¨ Ï†ÄÏû•Îêú Î™®Îì† Î©îÎ™®ÏôÄ ÏÑ§Ï†ïÏùÑ JSON ÌååÏùºÎ°ú Îã§Ïö¥Î°úÎìúÌï©ÎãàÎã§.</p>
                                <button class="btn-primary" onclick="window.downloadBackupData ? window.downloadBackupData() : alert('Î∞±ÏóÖ ÏãúÏä§ÌÖúÏùÑ Ï§ÄÎπÑ Ï§ëÏûÖÎãàÎã§.')">
                                    üíæ Î∞±ÏóÖ Îã§Ïö¥Î°úÎìú
                                </button>
                            </div>
                            <div class="backup-section">
                                <h3>üìä Î∞±ÏóÖ Ï†ïÎ≥¥</h3>
                                <div id="backupInfo">
                                    <p>Î©îÎ™® Í∞úÏàò: ${JSON.parse(localStorage.getItem('memos') || '[]').length}Í∞ú</p>
                                    <p>Îç∞Ïù¥ÌÑ∞ ÌÅ¨Í∏∞: ${Math.round(JSON.stringify(localStorage.getItem('memos') || '[]').length / 1024)}KB</p>
                                    <p>Î∞±ÏóÖ ÎÇ†Ïßú: ${new Date().toLocaleDateString('ko-KR')}</p>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button class="btn-secondary" onclick="window.modalManager ? window.modalManager.close('backupModal') : this.closest('.modal').style.display='none'">
                                Îã´Í∏∞
                            </button>
                        </div>
                    </div>
                </div>`;
                
                // Í∏∞Ï°¥ Î∞±ÏóÖ Î™®Îã¨ Ï†úÍ±∞ (Ïó¨Îü¨ ID ÌôïÏù∏)
                const existingIds = ['backupModal', 'backupModalBackdrop'];
                existingIds.forEach(id => {
                    const existing = document.getElementById(id);
                    if (existing) {
                        existing.remove();
                        console.log(`üì¶ Í∏∞Ï°¥ Î∞±ÏóÖ Î™®Îã¨ Ï†úÍ±∞: ${id}`);
                    }
                });
                
                // ÏÉà Î™®Îã¨ Ï∂îÍ∞Ä
                document.body.insertAdjacentHTML('beforeend', modalHTML);
                
                const newModal = document.getElementById('backupModal');
                if (newModal) {
                    console.log('üì¶ Î∞±ÏóÖ Î™®Îã¨ ÏÉùÏÑ± ÏôÑÎ£å, modalManager ÏÇ¨Ïö© ÏòàÏ†ï');
                    
                    // modalManagerÍ∞Ä ÏûàÏúºÎ©¥ Í∑∏Í≤ÉÏùÑ ÌÜµÌï¥ Ïó¥Í∏∞
                    if (typeof window.modalManager === 'object' && window.modalManager.open) {
                        // Ï¶âÏãú Ìò∏Ï∂úÌïòÏßÄ ÎßêÍ≥† DOMÏù¥ ÏôÑÏ†ÑÌûà Ï§ÄÎπÑÎêú ÌõÑ Ìò∏Ï∂ú
                        requestAnimationFrame(() => {
                            console.log('üì¶ modalManager.open Ìò∏Ï∂ú');
                            window.modalManager.open('backupModal');
                        });
                        return; // Ìï®Ïàò Ï¢ÖÎ£å
                    } else {
                        console.log('üì¶ modalManager ÏóÜÏùå, ÏßÅÏ†ë ÌëúÏãú');
                        // fallback: ÏßÅÏ†ë ÌëúÏãú
                        this.forceShowModal(newModal);
                    }
                    
                    // Î∞±ÏóÖ Îã§Ïö¥Î°úÎìú Ìï®Ïàò ÏÉùÏÑ±
                    if (!window.downloadBackupData) {
                        window.downloadBackupData = function() {
                            const backupData = {
                                memos: JSON.parse(localStorage.getItem('memos') || '[]'),
                                settings: JSON.parse(localStorage.getItem('calendarSettings') || '{}'),
                                theme: localStorage.getItem('theme') || 'light',
                                exportDate: new Date().toISOString()
                            };
                            
                            const blob = new Blob([JSON.stringify(backupData, null, 2)], {
                                type: 'application/json'
                            });
                            
                            const url = URL.createObjectURL(blob);
                            const a = document.createElement('a');
                            a.href = url;
                            a.download = `memo-backup-${new Date().toISOString().slice(0, 10)}.json`;
                            document.body.appendChild(a);
                            a.click();
                            document.body.removeChild(a);
                            URL.revokeObjectURL(url);
                            
                            console.log('üì¶ Î∞±ÏóÖ Îã§Ïö¥Î°úÎìú ÏôÑÎ£å');
                            alert('Î∞±ÏóÖ ÌååÏùºÏù¥ Îã§Ïö¥Î°úÎìúÎêòÏóàÏäµÎãàÎã§!');
                        };
                    }
                }
                
                console.log('‚úÖ Î∞±ÏóÖ Î™®Îã¨ ÎèôÏ†Å ÏÉùÏÑ± ÏôÑÎ£å');
                return newModal;
            },
            
            // ÌÅ¥ÎùºÏö∞Îìú Î™®Îã¨ ÎèôÏ†Å ÏÉùÏÑ±
            createCloudModal: function() {
                console.log('‚òÅÔ∏è ÌÅ¥ÎùºÏö∞Îìú Î™®Îã¨ ÎèôÏ†Å ÏÉùÏÑ± ÏãúÏûë');
                
                const modalHTML = `
                <div class="modal unified-modal" id="unifiedCloudModal">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h2 class="modal-title">‚òÅÔ∏è ÌÅ¥ÎùºÏö∞Îìú ÏÑ§Ï†ï</h2>
                            <button class="modal-close">‚úï</button>
                        </div>
                        <div class="modal-body">
                            <div class="cloud-section">
                                <h3>Íµ¨Í∏Ä ÎìúÎùºÏù¥Î∏å Ïó∞Í≤∞</h3>
                                <p>ÌÅ¥ÎùºÏö∞Îìú ÎèôÍ∏∞Ìôî Í∏∞Îä•ÏùÑ ÏÑ§Ï†ïÌï©ÎãàÎã§.</p>
                                <button class="btn-primary" onclick="alert('ÌÅ¥ÎùºÏö∞Îìú Í∏∞Îä•ÏùÑ Ï§ÄÎπÑ Ï§ëÏûÖÎãàÎã§.')">
                                    üì° Ïó∞Í≤∞ ÏÑ§Ï†ï
                                </button>
                            </div>
                            <div class="cloud-section">
                                <h3>ÏûêÎèô ÎèôÍ∏∞Ìôî</h3>
                                <p>ÏùºÏ†ïÍ≥º Î©îÎ™®Î•º ÏûêÎèôÏúºÎ°ú Î∞±ÏóÖÌï©ÎãàÎã§.</p>
                                <button class="btn-secondary" onclick="alert('ÏûêÎèô ÎèôÍ∏∞ÌôîÎ•º Ï§ÄÎπÑ Ï§ëÏûÖÎãàÎã§.')">
                                    üîÑ ÎèôÍ∏∞Ìôî ÏÑ§Ï†ï
                                </button>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button class="btn-secondary" onclick="window.modalManager ? window.modalManager.close('unifiedCloudModal') : document.getElementById('unifiedCloudModal').style.display='none'">
                                Îã´Í∏∞
                            </button>
                        </div>
                    </div>
                </div>`;
                
                // Í∏∞Ï°¥ ÌÅ¥ÎùºÏö∞Îìú Î™®Îã¨ Ï†úÍ±∞
                const existing = document.getElementById('unifiedCloudModal');
                if (existing) {
                    existing.remove();
                }
                
                // ÏÉà Î™®Îã¨ Ï∂îÍ∞Ä
                document.body.insertAdjacentHTML('beforeend', modalHTML);
                
                const newModal = document.getElementById('unifiedCloudModal');
                console.log('‚úÖ ÌÅ¥ÎùºÏö∞Îìú Î™®Îã¨ ÎèôÏ†Å ÏÉùÏÑ± ÏôÑÎ£å');
                
                return newModal;
            },
            
            // Ï†ÄÏû•ÏÜå Ï†ïÎ≥¥ ÏóÖÎç∞Ïù¥Ìä∏
            updateStorageInfo: function() {
                try {
                    if (typeof getStorageSize === 'function') {
                        const currentSize = getStorageSize();
                        console.log(`üìä Ï†ÄÏû•ÏÜå ÏÇ¨Ïö©Îüâ: ${currentSize}MB`);
                    }
                } catch (e) {
                    console.error('Ï†ÄÏû•ÏÜå Ï†ïÎ≥¥ ÏóÖÎç∞Ïù¥Ìä∏ Ïã§Ìå®:', e);
                }
            }
        },
        
        // Î≤ÑÌäº Ï¥àÍ∏∞Ìôî
        initButton: function(buttonId) {
            console.log(`üîß ${buttonId} Ï¥àÍ∏∞Ìôî ÏãúÏûë`);
            
            const button = document.getElementById(buttonId);
            if (!button) {
                console.warn(`‚ö†Ô∏è ${buttonId} Î≤ÑÌäºÏùÑ Ï∞æÏùÑ Ïàò ÏóÜÏùå`);
                return;
            }
            
            // Í∏∞Ï°¥ Ïù¥Î≤§Ìä∏ ÏôÑÏ†Ñ Ï†úÍ±∞
            const newButton = button.cloneNode(true);
            button.parentNode.replaceChild(newButton, button);
            
            // Ïä§ÌÉÄÏùº Í∞ïÌôî
            newButton.style.cssText += `
                pointer-events: auto !important;
                cursor: pointer !important;
                z-index: 1000 !important;
                position: relative !important;
                user-select: none !important;
            `;
            
            // ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏ Îì±Î°ù (Ïó¨Îü¨ Î∞©Î≤ï)
            const handler = this.handlers[buttonId];
            if (handler) {
                // 1. ÏùºÎ∞ò ÌÅ¥Î¶≠
                newButton.addEventListener('click', (e) => {
                    e.preventDefault();
                    e.stopPropagation();
                    e.stopImmediatePropagation();
                    
                    console.log(`üéØ ${buttonId} ÌÅ¥Î¶≠ Í∞êÏßÄ`);
                    
                    // ÏãúÍ∞ÅÏ†Å ÌîºÎìúÎ∞±
                    newButton.style.transform = 'scale(0.95)';
                    setTimeout(() => {
                        newButton.style.transform = '';
                    }, 150);
                    
                    // Ìï∏Îì§Îü¨ Ïã§Ìñâ (Ïù¥Î≤§Ìä∏ Í∞ùÏ≤¥ Ï†ÑÎã¨)
                    handler.call(this.handlers, e);
                }, { passive: false });
                
                // 2. ÌÑ∞Ïπò Ïù¥Î≤§Ìä∏
                newButton.addEventListener('touchend', (e) => {
                    e.preventDefault();
                    console.log(`üëÜ ${buttonId} ÌÑ∞Ïπò Í∞êÏßÄ`);
                    handler.call(this.handlers);
                }, { passive: false });
                
                // 3. ÎßàÏö∞Ïä§Îã§Ïö¥/ÏóÖ
                newButton.addEventListener('mousedown', (e) => {
                    e.preventDefault();
                    newButton.style.transform = 'scale(0.95)';
                });
                
                newButton.addEventListener('mouseup', (e) => {
                    e.preventDefault();
                    newButton.style.transform = '';
                    console.log(`üñ±Ô∏è ${buttonId} ÎßàÏö∞Ïä§ÏóÖ Í∞êÏßÄ`);
                    setTimeout(() => handler.call(this.handlers), 50);
                });
                
                // 4. ÌÇ§Î≥¥Îìú Ï†ëÍ∑ºÏÑ±
                newButton.addEventListener('keydown', (e) => {
                    if (e.key === 'Enter' || e.key === ' ') {
                        e.preventDefault();
                        handler.call(this.handlers);
                    }
                });
            }
            
            // Ìò∏Î≤Ñ Ìö®Í≥º
            newButton.addEventListener('mouseenter', function() {
                this.style.transform = 'translateY(-2px)';
                this.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.15)';
            });
            
            newButton.addEventListener('mouseleave', function() {
                this.style.transform = '';
                this.style.boxShadow = '';
            });
            
            console.log(`‚úÖ ${buttonId} Ï¥àÍ∏∞Ìôî ÏôÑÎ£å`);
        },
        
        // Ï†ÑÏ≤¥ Ï¥àÍ∏∞Ìôî
        init: function() {
            console.log('üöÄ Î©îÎâ¥ ÌÅ¥Î¶≠ Î≥¥Ïû• ÏãúÏä§ÌÖú ÏãúÏûë');
            
            const buttonIds = [
                'createBtn', 'memoBtn', 'excelBtn', 'backupBtn', 'unifiedCloudBtn',
                'syncStatusBtn', 'settingsBtn', 'storageBtn'
            ];
            
            buttonIds.forEach(buttonId => {
                this.initButton(buttonId);
            });
            
            console.log('üéâ Î™®Îì† Î©îÎâ¥ Î≤ÑÌäº ÌÅ¥Î¶≠ Î≥¥Ïû• ÏôÑÎ£å');
        }
    };
    
    // Ï¥àÍ∏∞Ìôî Ïã§Ìñâ
    function initializeMenuSystem() {
        console.log('üîÑ Î©îÎâ¥ ÏãúÏä§ÌÖú Ï¥àÍ∏∞Ìôî ÏãúÏûë');
        
        // Í∏∞Ï°¥ ÏãúÏä§ÌÖúÍ≥º Ï∂©Îèå Î∞©ÏßÄÎ•º ÏúÑÌïú ÏßÄÏó∞
        setTimeout(() => {
            menuClickSystem.init();
        }, 200);
    }
    
    // DOM Ï§ÄÎπÑÏãú Ïã§Ìñâ
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initializeMenuSystem);
    } else {
        initializeMenuSystem();
    }
    
    // ÌéòÏù¥ÏßÄ Î°úÎìú ÏôÑÎ£å ÌõÑ Ïû¨ÌôïÏù∏
    window.addEventListener('load', function() {
        setTimeout(initializeMenuSystem, 500);
    });
    
    // Ï†ÑÏó≠ Ï†ëÍ∑º
    window.menuClickSystem = menuClickSystem;
    
    console.log('üîß Î©îÎâ¥ ÌÅ¥Î¶≠ Î≥¥Ïû• ÏãúÏä§ÌÖú Î°úÎìú ÏôÑÎ£å');
    
})();